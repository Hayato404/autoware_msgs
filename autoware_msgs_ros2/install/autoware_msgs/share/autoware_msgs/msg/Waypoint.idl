// generated from rosidl_adapter/resource/msg.idl.em
// with input from autoware_msgs/msg/Waypoint.msg
// generated code does not contain a copyright notice

#include "autoware_msgs/msg/DTLane.idl"
#include "autoware_msgs/msg/WaypointState.idl"
#include "geometry_msgs/msg/PoseStamped.idl"
#include "geometry_msgs/msg/TwistStamped.idl"

module autoware_msgs {
  module msg {
    struct Waypoint {
      @verbatim (language="comment", text=
        "Global ID")
      int32 gid;

      @verbatim (language="comment", text=
        "Local ID")
      int32 lid;

      geometry_msgs::msg::PoseStamped pose;

      geometry_msgs::msg::TwistStamped twist;

      @verbatim (language="comment", text=
        "Waypoint in the middle of the lane")
      autoware_msgs::msg::DTLane dtlane;

      @verbatim (language="comment", text=
        "Flag for lane change")
      int32 change_flag;

      @verbatim (language="comment", text=
        "What makes waypoints read event flags (for vectormap)")
      autoware_msgs::msg::WaypointState wpstate;

      @verbatim (language="comment", text=
        "Motal vehicle lane number")
      uint32 lane_id;

      @verbatim (language="comment", text=
        "Left lane number")
      uint32 left_lane_id;

      @verbatim (language="comment", text=
        "Right lane number")
      uint32 right_lane_id;

      @verbatim (language="comment", text=
        "Stop the identifier for a while")
      uint32 stop_line_id;

      float cost;

      float time_cost;

      @verbatim (language="comment", text=
        "Lane Direction" "\n"
        "FORWARD        = 0" "\n"
        "FORWARD_LEFT       = 1" "\n"
        "FORWARD_RIGHT      = 2" "\n"
        "BACKWARD        = 3" "\n"
        "BACKWARD_LEFT      = 4" "\n"
        "BACKWARD_RIGHT    = 5" "\n"
        "STANDSTILL       = 6")
      uint32 direction;
    };
  };
};
